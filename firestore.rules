rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isValidUser(user) {
      return user.keys().hasAll(['id', 'name', 'username', 'email', 'createdAt']) &&
             user.name is string && user.name.size() > 0 &&
             user.username is string && user.username.matches('^[a-zA-Z0-9_]{3,20}$') &&
             user.email is string && user.email.matches('^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$') &&
             user.isOwner is bool &&
             user.isWorker is bool;
    }

    // Users collection
    match /users/{userId} {
      // Anyone authenticated can read user profiles (adjust as needed for privacy)
      allow read: if isAuthenticated();

      // Users can create their own profile
      allow create: if isOwner(userId) && isValidUser(request.resource.data);

      // Users can update their own profile
      allow update: if isOwner(userId) &&
                       isValidUser(request.resource.data) &&
                       request.resource.data.id == resource.data.id &&
                       request.resource.data.createdAt == resource.data.createdAt;

      // Users can delete their own profile
      allow delete: if isOwner(userId);
    }

    // Default deny all other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
